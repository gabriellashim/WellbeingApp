@model IEnumerable<StudentReports>
@inject UserManager<WebAppUser> UserManager

@{ ViewData["Title"] = "ViewNotification";
    Layout = "/Pages/Shared/_Layout.cshtml";
    int notificationCount = 0;
    var assignedleader = " "; }

<!--This area should pull the notification count from DB and show in the screen-->
<!--Condition:-->
<!--The message will only show to those students that is assigned to the leader or vice versa.-->
<!--if the button in the leaders account has been clicked, turn the emotion notification count to 0-->

<div style="text-align:center;">
    <h4>
        View Notifications
    </h4>
    <hr />
</div>


<div class="form-group">

    @*@foreach (var user in UserManager.Users)
    {
        if (user.LeaderAssigned != null)
        {
            assignedleader = user.LeaderAssigned;
            if (assignedleader.Equals(((await UserManager.GetUserAsync(User)).FirstName)))
            {
                foreach (var notification in Model)
                {
                    if (user.UserName.Equals(notification.StudentID))
                    {
                        notificationCount++;
                    }
                }
            }
        }
    }*@

    @foreach (var notification in Model)
    {
        if ((notification.StudentComment != null)&& (assignedleader.Equals(((await UserManager.GetUserAsync(User)).FirstName))))
        {
    <div class="alert alert-warning alert-dismissible fade show" role="alert">
        <div class="row mb-3">
            <div class="col-sm-12">
                <strong>@Html.DisplayFor(modelItem => notification.StudentID)</strong>
            </div>

            <div class="col-sm-2"> @Html.DisplayFor(modelItem => notification.ReportDate)</div>
            <div class="col-sm-10"></div>

            <label class="col-sm-2 col-form-label">When To See</label>
            <div class="col-sm-10"> @Html.DisplayFor(modelItem => notification.AppointmentDate)</div>

            <label class="col-sm-2 col-form-label">Description</label>
            <div class="col-sm-10">  @Html.DisplayFor(modelItem => notification.StudentComment)</div>
        </div>
   
         <button type ="button" class="close" data-dismiss="alert" aria-label="Close" onclick="dismissed();">
             <span aria-hidden="true">&times;</span>

         </button>
    
    </div>
        }
     }

        <label id="count">Total: @notificationCount notification(s)</label>
    </div>


<style>
    div {
        text-align: center;
    }
</style>

<script>
    function dismissed() {

    }
</script>